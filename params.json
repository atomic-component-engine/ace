{"name":"Atomic-component-system","tagline":"This is a yeoman generator for an atomic design system","body":"atomic-component-system v0.1.0\r\n=======================\r\n\r\n\r\n* [Quick Start](#quick)\r\n\t* [Getting Started](#getting-started)\r\n \t* [ACS Init](#acs-init)\r\n* [Object Oriebted Frontend](#object-orientation-in-the-frontend)\r\n* [Nitty Gritty](#nitty)\r\n\t* [Boilerplate](#boilerplate)\r\n\t* [Component factory](#component-factory)\r\n\t* [File structure](#file-structure)\r\n* [Todos](#todos)\r\n\r\nACS is a system for creating and maintaining Frontend projects. It builds on the ideas forwarded by [Brad Frost](http://bradfrostweb.com/blog/post/atomic-web-design/) where instead of designing pages, we design and develop a system of components. \r\n\r\nThis system has 2 main elements. [The boilerplate](https://github.com/pjhauser/front-end-boilerplate), which consists of a Grunt based project, and a [component generator](https://github.com/pjhauser/component-generator) both of which are managed by Yeoman. \r\n\r\n\r\n###Quick Start\r\n\r\n#### Getting Started\r\n\r\n1. Clone the repo.\r\n2. Run `npm install -g`\r\n3. Run `npm link`\r\n4. cd into the working directory of your project\r\n5. Run `yo acs init`\r\n\r\n\r\n#### ACS Init\r\nThis task initialises the directory with the main boilerplate. You will be asked just 3 questions:\r\n\r\n1. Do you want to init this directory with ACS (Y/n)\r\n2. What is the base URL of the directory? *This is for the script and css paths of the template*\r\n3. Are you using Git? *This will add the base gitignore*\r\n\r\nNow your directory has the base boilerplate you'll want to start creating components. \r\n\r\n\r\n#### Component generation\r\n\r\nYou can use the same yeoman generator to create components. Just type:\r\n\r\n1. yo acs\r\n2. Select component type\r\n3. Name component\r\n\r\n\r\n### Object orientation in the Frontend\r\nAtomic design is an Object Oriented methodology for frontend development. It focuses on creating a set of base components, and inheriting them into parent component groups. \r\n\r\n![Atomic Design Diagram](http://bradfrostweb.com/wp-content/uploads/2013/06/atomic-design.png)\r\n\r\nThis this method of inheritance is not yet possible with HTML and CSS. We need an abstraction layer and build process. This is where we introduce three fundamental aspects of ACS. \r\n\r\n* [Jade](https://github.com/visionmedia/jade)\r\n* [SASS](https://github.com/nex3/sass)\r\n* [Grunt](https://github.com/gruntjs/grunt)\r\n\r\nJade and SASS form our abstraction layers, and Grunt forms our build process. \r\n\r\nJade offers a flexible templating engine that allows for mixins and includes. The flexibility of the engine and it's compatibility with Grunt. \r\n\r\n\r\n### Nitty Gritty\r\n#### Boilerplate\r\nIf you clone the [main boilerplate project](https://github.com/pjhauser/front-end-boilerplate) this gives you the project scaffolding and Gruntfile. Eventually this can be moved into a Yeoman generator but for now just clone the project and rename the directory to you're respective component factory. \r\n\r\n#### Component factory\r\nOnce you have the boilerplate in you'll need to install the Yeoman component generator. This is the day-to-day generator. [Grab the project](https://github.com/pjhauser/component-generator) and `cd` into the directory. Once in you'll want to `npm install -g` which will install the generator, and then `npm link`. \r\n\r\nNow you'll have the generator installed and ready to use. \r\n\r\n#### File structure\r\n\tsrc\r\n\t  | --> /atoms\r\n\t  \t\t   |--> /atom_name\r\n\t  \t\t\t\t  | --> atom_name.jade\r\n\t  \t\t\t\t  | --> atom_name.js\r\n\t  \t\t\t\t  | --> atom_name.sass\r\n\t  \t\t\t\t  | --> demo_atom_name.jade\r\n\t  \t\t\t\t  \t\t  \t  \r\n\t  | --> /molecules\r\n\t  | --> /organisms\r\n\t  | --> /templates\r\n\t  | --> /global-js\r\n\t  | --> /global-sass\r\n\r\n\r\n### Todos \r\n* Create an example webpage using this generator. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}